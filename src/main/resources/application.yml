server:
  port: 10000   # 웹 테스트 포트 10000


spring:
  main:
    allow-bean-definition-overriding: true
  jwt:
    secret: doccatdoccatdoccatdoccatdoccatdoccatdoccatdoccatdoccatdoccat
  profiles:
    include: google

  application:
    name: DogCat

  #TODO url: jdbc:mariadb://dogcat-project.c30wsegeo29w.ap-northeast-2.rds.amazonaws.com:3306/dogcat

  datasource:
    url: jdbc:mariadb://localhost:3306/dogcat               # 개인 로컬 테스트 DB
    driver-class-name: org.mariadb.jdbc.Driver
    username: dogcat                                         #아이디 비번 dogcat 통일
    password: dogcat
  #create user dogcat identified by 'dogcat';   유저 생성
  #GRANT ALL PRIVILEGES ON dogcat.* TO 'dogcat'@'localhost' IDENTIFIED BY 'dogcat'; 권한 부여

  # 배포 시 localhost:10000 -> dogcat.n-e.kr
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-name: kakao
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:10000/login/oauth2/code/kakao
            client-id: fbe3f449304201cd7f53e8db32edfcd3
            client-authentication-method: client_secret_post
            scope:
              - profile_nickname
              - account_email
          naver:
            client-name: naver
            client-id: nY7o3bXuz0eVfAyFOBwB
            client-secret: cvcu83KBt2
            redirect-uri: http://localhost:10000/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            scope:
              - name
              - email
          google:
            client-name: google
            client-id: 326798928654-m41j1jg2nhaiq0clnbs0cmakig1rhg7b.apps.googleusercontent.com
            client-secret: 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
            redirect-uri: http://localhost:10000/login/oauth2/code/google
            authorization-grant-type: authorization_code
            scope:
              - profile
              - email
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            user-name-attribute: id
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

  mail:
    host: smtp.gmail.com  # 구글 SMTP 서버 domain
    port: 587  # SMTP 포트 번호
    username: "seulgi0587@gmail.com"
    password: "wonnzsygrpskmqjm"
    properties:
      mail:
        smtp:
          auth: true  # 사용자 인증 true
          starttls:
            enable: true

  jpa:
    open-in-view: false
    generate-ddl: true
    show-sql: false
    hibernate:
      ddl-auto: update

    properties:
      format_sql: true
      hibernate:
        dialect: org.hibernate.dialect.MariaDBDialect
        naming:
          physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    defer-datasource-initialization: true

  thymeleaf:
    cache: false

  #파일 업로드
  servlet:
    multipart:
      enabled: true
      location: C:/testupload/
      max-file-size: 50MB
      max-request-size: 50MB

# 저장 디렉토리
s3UploadPath: C:/testupload/s3/
tempUploadPath: C:/testupload/temp/

s3Resource: file:///C:/testupload/s3/
tempResource: file:///C:/testupload/temp/

# 로컬 테스트 로깅
loggingPath: C:/testupload/log/

# TODO 리눅스 업로드 경로
# multipartUploadPath: ${user.home}/testupload/multipart/
# s3UploadPath: ${user.home}/testupload/s3/
# tempUploadPath: ${user.home}/testupload/temp/

# summernote 로 업로드된 postContent 의 이미지 링크를 로컬에서 S3링크로 변환
baseUrl: http://localhost:10000
oldUrl: http://localhost:10000/temp/
newUrl: https://dogcat-s3-teamproject.s3.ap-northeast-2.amazonaws.com/


logging:
  level:
    org:
      springframework: info
      community: warn
      security: warn
      hibernate:
        sql: warn
    com:
      amazonaws:
        util:
          EC2MetadataUtil: error
    root: warn
  file:
    path: ${user.home}/testupload/log
    name: DogCatLog.log

cloud:
  aws:
    # AWS Account Credentials (AWS 접근 키)
    credentials:
      access-key: AKIAXYKJRGBHYYY6NUKK
      secret-key: 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
      # file upload max size (파일 업로드 크기 설정)
    region:
      static: ap-northeast-2
    stack:
      auto: false
      # AWS S3 bucket Info (S3 버킷정보)
    s3:
      bucket: dogcat-s3-teamproject



